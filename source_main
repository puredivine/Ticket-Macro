from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.alert import Alert

from keyboard import wait as keyboard_wait
from datetime import datetime
from sys import exit as _exit
from time import sleep

from bs4 import BeautifulSoup

DAY = ['20240803', '20240707'][0]
TIME = 1
TARGET = [
    (2, 4),
    (2, 5)
]
SITE = ['{} 층 {} 구역'.format(_set[0], _set[1]) for _set in TARGET]


try:
    # Set Driver #
    chrome_options = webdriver.ChromeOptions()
    chrome_options.add_experimental_option("debuggerAddress", "127.0.0.1:9222")

    macro_driver = webdriver.Chrome(options=chrome_options)
    _wait = lambda sec: WebDriverWait(macro_driver, sec, poll_frequency=0.4)
    # Set Driver #



    print('wait for esc to run')
    keyboard_wait('esc') # For test
    print('running')
    start_time = datetime.now()



    # deal with the first window #
    btn_list = _wait(100).until(EC.element_to_be_clickable((By.CSS_SELECTOR, '#ticketing_process_box > div > div.box_ticketing_process > dl.date_choice > dd.sorting > button.type_list')))
    btn_list.click()
    btn_date = _wait(10).until(EC.element_to_be_clickable((By.CSS_SELECTOR, '#dateSelect_{} > button > span'.format(DAY))))
    btn_date.click()

    btn_time = _wait(10).until(EC.visibility_of_element_located((By.XPATH, '//*[@id="list_time"]/li[{}]/button'.format(TIME))))
    btn_time.click()
    btn_reservation = _wait(10).until(EC.element_to_be_clickable((By.ID,'ticketReservation_Btn')))
    btn_reservation.click()
    # deal with the first window #
    


    # deal with the second window #
    _wait(10).until(EC.number_of_windows_to_be(2))
    macro_driver.switch_to.window(macro_driver.window_handles[1])

    _wait(10).until(lambda driver: driver.execute_script('return document.readyState;') == 'complete')

    soup = BeautifulSoup(macro_driver.page_source, 'html.parser')
    captcha_exist = False if soup.find('div', id='certification') == None else True

    print(captcha_exist)

except KeyboardInterrupt:
    raise KeyboardInterrupt

except Exception as ERROR:
    raise ERROR

finally:
    _exit('EndTime: {}      RunTime: {}'.format(datetime.now(), datetime.now()-start_time))
